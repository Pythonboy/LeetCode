 
 (一）
 int climbStairs(int n) 
{
     vector<int> steps(n,0);
     steps[0]=1;
     steps[1]=2;
     for(int i=2;i<n;i++)
     {
         steps[i]=steps[i-2]+steps[i-1];
     }
     return steps[n-1];
 }
 
 （二）
 public int climbStairs(int n) {
    if(n < 0)
        return 0;
    if(n == 1)
        return 1;
        
    int[] store = new int[n];
    
    store[0] = 1;
    store[1] = 2;
    
    for(int i = 2; i < n; ++i)
        store[i] = store[i-1] + store[i-2];
        
    return store[n-1];
}
}

（三）
C++ (0 ms)

int climbStairs(int n) {
    int a = 1, b = 1;
    while (n--)
        a = (b += a) - a;
    return a;
}


（四）
int climbStairs(int n) {
    int a = 1, b = 1;
    while (n--)
        a = (b += a) - a;
    return a;
}

（五）
class Solution {
public:
    int climbStairs(int n) {
        int StepOne = 1;
        int StepTwo = 0;
        int ret = 0;
        for(int i=0;i<n;i++)
        {
            ret = StepOne + StepTwo;
            StepTwo = StepOne;
            StepOne = ret;
        }
        return ret;
    }
};

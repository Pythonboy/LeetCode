/*
Given a word, you need to judge whether the usage of capitals in it is right or not.

We define the usage of capitals in a word to be right when one of the following cases holds:

All letters in this word are capitals, like "USA".
All letters in this word are not capitals, like "leetcode".
Only the first letter in this word is capital if it has more than one letter, like "Google".
Otherwise, we define that this word doesn't use capitals in a right way.
Example 1:
Input: "USA"
Output: True
Example 2:
Input: "FlaG"
Output: False
Note: The input will be a non-empty word consisting of uppercase and lowercase latin letters.
*/



//My Answer
bool detectCapitalUse(char* word) {
    int len = strlen(word);
    if(len == 1)
        return true;
    int i;
    if(word[0]>='a'&&word[0]<='z')
    {
        for(i=1 ; i<len ; i++)
        {
            if(!(word[i]>='a'&&word[i]<='z'))
                return false;
        }
        return true;
    }
    if(word[0]>='A'&&word[0]<='Z')
    {
        if(word[1]>='A'&&word[1]<='Z')
        {
            for(i=2 ; i<len ; i++)
            {
                if(!(word[i]>='A'&&word[i]<='Z'))
                    return false;
            }
            return true;
        }
        if(word[1]>='a'&&word[1]<='z')
        {
            for(i=2 ; i<len ; i++)
            {
                if(!(word[i]>='a'&&word[i]<='z'))
                    return false;
            }
            return true;
        }
    }
    return false;
}


//他山之玉
//Python
def detectCapitalUse(self, word):
    return word.isupper() or word.islower() or word.istitle()
    
    
//C++
//思路：正则表达式
class Solution {
public:
    bool detectCapitalUse(string word) {
        return regex_match(word, regex("[A-Z]+|[a-z]+|[A-Z][a-z]*"));
    }
};


//C++
//思路：记录字符串中大写字母和小写字母的数量
class Solution {
public:
    bool detectCapitalUse(string word) {
		int size=word.size(),count=0;
		if(size<=1)
			return true;
		for (int i = 1; i < size; i++){
			if(word[i]>='a'&&word[i]<='z')
				count+=1;
			else
				count+=2;
		}
		if(count==size-1)
			return true;
		else if(count==2*(size-1))
			return word[0]>='A'&&word[0]<='Z';
		else 
			return false;
    }
};


//C++
bool detectCapitalUse(char* word) {
    bool capitalValid = isupper(word[0]);
    for(int i=1; i<strlen(word); ++i){
        if(capitalValid){
            if(!isupper(word[i])) {
                if(i>1){
                      return false;      
                }else{
                    capitalValid = false;
                }
            }
        }else{
            if(isupper(word[i])) return false;
        }
    }
    
    return true;
}

/*

Write a program that outputs the string representation of numbers from 1 to n.

But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”.

Example:

n = 15,

Return:
[
    "1",
    "2",
    "Fizz",
    "4",
    "Buzz",
    "Fizz",
    "7",
    "8",
    "Fizz",
    "Buzz",
    "11",
    "Fizz",
    "13",
    "14",
    "FizzBuzz"
]
*/




//My Answer
//其实就是一个多重判断的问题，用Python写很简单，但是如果用C写，对于字符串的表达以及内存的分配就有很多问题 T_T
class Solution:
    def fizzBuzz(self, n):
        """
        :type n: int
        :rtype: List[str]
        """
        res = [];
        for i in range(n):
            if (i+1)%3==0 and (i+1)%5==0:
                res.append("FizzBuzz");
            elif (i+1)%3 == 0:
                res.append("Fizz");
            elif (i+1)%5 == 0:
                res.append("Buzz");
            else:
                res.append(str(i+1));
        return res;
        
        
 //他山之玉
class Solution {
public:
    vector<string> fizzBuzz(int n) {
        vector<string> ret_vec(n);
        for(int i=1; i<=n; ++i)
        {
            if(0 == i%3)
            {
                ret_vec[i-1] += "Fizz";
            }
            if(0 == i%5)
            {
                ret_vec[i-1] += "Buzz";
            }
            if(ret_vec[i-1].empty())
            {
                ret_vec[i-1] += to_string(i);
            }
        }
        return ret_vec;
    }
};
